var tree = require('mongoose-data-tree');
const mongoose = require('mongoose');
const mongooseDelete =require ('mongoose-delete');
const Currency=require('../models/currency.model');
const Branch=require('../models/branch.model');

var AccountSchema = new mongoose.Schema({
    AccountId:Number,
    AccountNameEn:String,
    AccountNameAr:String,
    Level : Number,
    Type:String,
    Category:String,
    ParentId:mongoose.Schema.Types.ObjectId,
    Nature:String,
    FinalAccount:String,
    Branches: [{type: mongoose.Schema.Types.ObjectId, ref: Branch}],
    CurrencyId:[{type: mongoose.Schema.Types.ObjectId, ref: Currency}],
    ExternalLink: Boolean,
    RequiredCostCenter : Boolean,
    StopedAccount :{
        type: Boolean,
        default: false},
		
    StopedDate : {
      type: Date,
			default: null,
			optional: true },
    Notes  : String,
    CreatedOn : { type: Date, default: Date.now },
    ModifiedOn  :{ type: Date, default: Date.now },
    DeletedOn  :{ type: Date, default: Date.now },
    CreatedBy : [{type: mongoose.Schema.Types.ObjectId, ref: 'User'}],
    ModifiedBy :[{type: mongoose.Schema.Types.ObjectId, ref: 'User'}],
    DeletedBy :[{type: mongoose.Schema.Types.ObjectId, ref: 'User'}]
   
});

AccountSchema.plugin(tree);
var Account = mongoose.model('Account', AccountSchema);
 
/*
Model.plugin(tree, {
  pathSeparator : '#'   ,           // Default path separator
  onDelete :      'REPARENT'  ,     // Can be set to 'DELETE' or 'REPARENT'. Default: 'REPARENT'
  numWorkers:     5     ,           // Number of stream workers
  idType:         Schema.ObjectId  // Type used for _id. Can be, for example, String generated by shortid module
})
*/
AccountSchema.plugin(mongooseDelete, {
    overrideMethods: 'all',
    deletedAt: true,
    deletedBy: true
  })







module.exports = mongoose.model('Account', AccountSchema );